name: Deploy Backend to VM12

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM12_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H vm12.htl-leonding.ac.at >> ~/.ssh/known_hosts
          
          ssh -o StrictHostKeyChecking=no curaadm@vm12.htl-leonding.ac.at << 'EOF'
            echo "🚀 Starting backend deployment..."
            
            cd ~/cura-project
            
            # Fix ownership for git
            sudo chown -R curaadm:curaadm .git/
            sudo chown -R curaadm:curaadm .
            
            # Pull latest changes
            git reset --hard HEAD
            git clean -fd
            git pull origin main
            
            # Check if backend directory exists
            if [ ! -d "backend" ]; then
              echo "❌ Backend directory not found!"
              echo "💡 Create a backend/ directory with your C# API"
              exit 1
            fi
            
            cd backend
            
            # .NET Build and Run (assuming .NET project)
            if [ -f "*.csproj" ] || [ -f "*.sln" ]; then
              echo "🔨 Building .NET project..."
              
              # Stop any running backend process
              pkill -f "dotnet.*dll" || true
              
              # Build the project
              dotnet build --configuration Release
              
              # Run the backend (in background)
              nohup dotnet run --configuration Release --urls "http://0.0.0.0:5000" > ~/backend.log 2>&1 &
              
              echo "✅ Backend deployed and running!"
              echo "🚀 API available at: http://vm12.htl-leonding.ac.at:5000"
              echo "📊 Database connection: postgresql://cura_user:cura_password_2025@localhost:5432/cura_db"
              
            # Docker Deployment (if Dockerfile exists)
            elif [ -f "Dockerfile" ]; then
              echo "🐳 Building Docker container..."
              
              # Stop and remove old container
              docker stop cura-backend || true
              docker rm cura-backend || true
              
              # Build new image
              docker build -t cura-backend .
              
              # Run new container
              docker run -d --name cura-backend -p 5000:5000 \
                -e ConnectionStrings__DefaultConnection="Host=localhost;Database=cura_db;Username=cura_user;Password=cura_password_2025" \
                cura-backend
              
              echo "✅ Backend container deployed!"
              echo "🐳 Container status:"
              docker ps | grep cura-backend
              
            else
              echo "❌ No .NET project or Dockerfile found in backend/"
              echo "💡 Add either:"
              echo "   - .csproj/.sln file for .NET"
              echo "   - Dockerfile for containerized deployment"
              exit 1
            fi
            
            echo "✅ Backend deployment completed!"
          EOF