name: Deploy Full Stack to VM12

on:
  push:
    branches:
      - main
    paths:
      - 'database/**'
      - 'backend/**'
  workflow_dispatch:

jobs:
  deploy-full-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Full Stack via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM12_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H vm12.htl-leonding.ac.at >> ~/.ssh/known_hosts
          
          ssh -o StrictHostKeyChecking=no curaadm@vm12.htl-leonding.ac.at << 'EOF'
            echo "ÔøΩ Starting full stack deployment (Database + Backend + pgAdmin)..."
            
            cd ~/cura-project
            
            # Fix ownership
            sudo chown -R curaadm:curaadm .
            
            # Force pull (√ºberschreibt lokale √Ñnderungen)
            git reset --hard HEAD
            git clean -fd
            git pull origin main
            
            cd database
            
            # Docker installieren falls nicht vorhanden
            if ! command -v docker &> /dev/null; then
              echo "üê≥ Installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker curaadm
              echo "üîÑ Please log out and back in for Docker group changes to take effect"
            fi
            
            # Ensure we can pull .NET 8 images
            echo "üì¶ Pre-pulling required Docker images..."
            docker pull mcr.microsoft.com/dotnet/sdk:8.0 || echo "Failed to pull .NET SDK image"
            docker pull mcr.microsoft.com/dotnet/aspnet:8.0 || echo "Failed to pull .NET runtime image"

            # Docker Compose Plugin sicherstellen
            if ! docker compose version &> /dev/null; then
              echo "üîß Installing Docker Compose plugin..."
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            fi
            
            # Container starten/neustarten
            echo "üöÄ Starting containers (PostgreSQL + pgAdmin + Backend)..."
            docker compose down || true
            docker compose up -d --build
            
            echo "üìã Starting containers:"
            docker compose ps
            
            # Warten bis PostgreSQL ready ist
            echo "‚è≥ Waiting for database..."
            for i in {1..30}; do
              if docker compose exec -T postgres pg_isready -U admin -d cura > /dev/null 2>&1; then
                echo "‚úÖ Database is ready!"
                break
              fi
              sleep 2
            done
            
            echo "‚úÖ Deployment completed!"
            echo "üìã Final container status:"
            docker compose ps
            
            echo "ÔøΩ Services available at:"
            echo "  üöÄ Backend API: http://vm12.htl-leonding.ac.at:5257"
            echo "  üìñ Swagger UI: http://vm12.htl-leonding.ac.at:5257/swagger/index.html"
            echo "  üîß pgAdmin: http://vm12.htl-leonding.ac.at:8080"
            echo "  üóÑÔ∏è PostgreSQL: vm12.htl-leonding.ac.at:5434"
            
            echo "ÔøΩüìä Database tables:"
            docker compose exec -T postgres psql -U admin -d cura -c "\dt" 2>/dev/null || echo "Database not ready yet"
            
            echo "ü©∫ Backend health check with retries:"
            for i in {1..6}; do
              if curl -f http://localhost:5257/api/Medications &> /dev/null; then
                echo "‚úÖ Backend API is healthy!"
                break
              else
                echo "‚è≥ Backend not ready yet, waiting... (attempt $i/6)"
                sleep 10
              fi
              if [ $i -eq 6 ]; then
                echo "‚ùå Backend health check failed! Showing logs:"
                docker compose logs cura_backend
              fi
            done
          EOF